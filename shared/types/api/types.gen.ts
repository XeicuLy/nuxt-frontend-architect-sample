// This file is auto-generated by @hey-api/openapi-ts

export type GetApiHealthData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * エラーをシミュレートするためのテストパラメーター。error=SVR_002, timeout=NET_002
     */
    simulate?: 'error' | 'timeout';
  };
  url: '/api/health';
};

export type GetApiHealthErrors = {
  /**
   * タイムアウトエラー（テスト用：?simulate=timeoutで発生）
   */
  408: {
    error: string;
    /**
     * 統一エラーコード（可読性重視）: NET_xxx(ネットワーク), SVR_xxx(サーバー), VAL_xxx(バリデーション), AUTH_xxx(認証), UNK_xxx(不明)
     */
    errorCode:
      | 'NET_001'
      | 'NET_002'
      | 'NET_003'
      | 'NET_004'
      | 'SVR_001'
      | 'SVR_002'
      | 'SVR_003'
      | 'SVR_004'
      | 'SVR_005'
      | 'VAL_001'
      | 'VAL_002'
      | 'VAL_003'
      | 'VAL_004'
      | 'AUTH_001'
      | 'AUTH_002'
      | 'AUTH_003'
      | 'AUTH_004'
      | 'UNK_001'
      | 'UNK_002'
      | 'UNK_003'
      | 'UNK_004';
    timestamp: string;
  };
  /**
   * サーバーエラー（テスト用：?simulate=errorで発生）
   */
  500: {
    error: string;
    /**
     * 統一エラーコード（可読性重視）: NET_xxx(ネットワーク), SVR_xxx(サーバー), VAL_xxx(バリデーション), AUTH_xxx(認証), UNK_xxx(不明)
     */
    errorCode:
      | 'NET_001'
      | 'NET_002'
      | 'NET_003'
      | 'NET_004'
      | 'SVR_001'
      | 'SVR_002'
      | 'SVR_003'
      | 'SVR_004'
      | 'SVR_005'
      | 'VAL_001'
      | 'VAL_002'
      | 'VAL_003'
      | 'VAL_004'
      | 'AUTH_001'
      | 'AUTH_002'
      | 'AUTH_003'
      | 'AUTH_004'
      | 'UNK_001'
      | 'UNK_002'
      | 'UNK_003'
      | 'UNK_004';
    timestamp: string;
  };
  /**
   * サービス利用不可エラー（実際のヘルスチェック失敗時）
   */
  503: {
    error: string;
    /**
     * 統一エラーコード（可読性重視）: NET_xxx(ネットワーク), SVR_xxx(サーバー), VAL_xxx(バリデーション), AUTH_xxx(認証), UNK_xxx(不明)
     */
    errorCode:
      | 'NET_001'
      | 'NET_002'
      | 'NET_003'
      | 'NET_004'
      | 'SVR_001'
      | 'SVR_002'
      | 'SVR_003'
      | 'SVR_004'
      | 'SVR_005'
      | 'VAL_001'
      | 'VAL_002'
      | 'VAL_003'
      | 'VAL_004'
      | 'AUTH_001'
      | 'AUTH_002'
      | 'AUTH_003'
      | 'AUTH_004'
      | 'UNK_001'
      | 'UNK_002'
      | 'UNK_003'
      | 'UNK_004';
    timestamp: string;
  };
};

export type GetApiHealthError = GetApiHealthErrors[keyof GetApiHealthErrors];

export type GetApiHealthResponses = {
  /**
   * システムの稼働状況とISO形式のタイムスタンプを含むJSONオブジェクトを返却
   */
  200: {
    status: string;
    timestamp: string;
  };
};

export type GetApiHealthResponse = GetApiHealthResponses[keyof GetApiHealthResponses];

export type ClientOptions = {
  baseUrl: `${string}://${string}` | (string & {});
};
